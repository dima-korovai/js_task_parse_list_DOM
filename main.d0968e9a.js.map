{"version":3,"sources":["scripts/main.js"],"names":["employees","document","querySelectorAll","list","querySelector","valuesToNumber","workers","map","elem","dataset","salary","replace","slice","sortList","sorted","sort","a","b","append","getEmployees","obj","data","string","key","name","innerText","position","age","push"],"mappings":";AACA,aA2CA,SAAA,EAAA,GAAA,OAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,IAAA,SAAA,IAAA,MAAA,IAAA,UAAA,wIAAA,SAAA,EAAA,EAAA,GAAA,GAAA,EAAA,CAAA,GAAA,iBAAA,EAAA,OAAA,EAAA,EAAA,GAAA,IAAA,EAAA,OAAA,UAAA,SAAA,KAAA,GAAA,MAAA,GAAA,GAAA,MAAA,WAAA,GAAA,EAAA,cAAA,EAAA,EAAA,YAAA,MAAA,QAAA,GAAA,QAAA,EAAA,MAAA,KAAA,GAAA,cAAA,GAAA,2CAAA,KAAA,GAAA,EAAA,EAAA,QAAA,GAAA,SAAA,EAAA,GAAA,GAAA,oBAAA,QAAA,OAAA,YAAA,OAAA,GAAA,OAAA,MAAA,KAAA,GAAA,SAAA,EAAA,GAAA,GAAA,MAAA,QAAA,GAAA,OAAA,EAAA,GAAA,SAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,UAAA,EAAA,EAAA,QAAA,IAAA,IAAA,EAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,EAAA,GAAA,OAAA,EAzCA,IAAMA,EAAYC,SAASC,iBAAiB,mBACtCC,EAAOF,SAASG,cAAc,MAEpC,SAASC,EAAeC,GAClBA,EAAAA,GAASC,IAAI,SAAAC,GACfA,EAAKC,QAAQC,OAASF,EAAKC,QAAQC,OAAOC,QAAQ,IAAK,KAAKC,MAAM,KAItE,SAASC,EAASP,GACVQ,IAAAA,EACJ,EAAIR,GAASS,KAAK,SAACC,EAAGC,GAAMA,OAAAA,EAAER,QAAQC,OAASM,EAAEP,QAAQC,SAE3DP,EAAKe,OAALf,MAAAA,EAAeW,EAAAA,IAGjB,SAASK,EAAab,GACdc,IAAAA,EAAM,GACRC,EAAO,GAEPf,EAAAA,GAASC,IAAI,SAACC,GACVc,IAAAA,EAASd,EAAKC,QAAQC,OAAOC,QAAQ,IAAK,KAEhDH,EAAKC,QAAQC,OAAaY,IAAAA,OAAAA,KAGNhB,IAAAA,IAAAA,EAAAA,EAAAA,EAAAA,EAAAA,GAAU,EAAA,EAAA,OAAA,IAAA,CAArBiB,IAAAA,EAAN,EAAA,GACHF,EAAO,CACLG,KAAMD,EAAIE,UACVC,SAAUH,EAAId,QAAQiB,SACtBhB,OAAQa,EAAId,QAAQC,OACpBiB,IAAKJ,EAAId,QAAQkB,KAEnBP,EAAIQ,KAAKP,GAGJD,OAAAA,EAGTf,EAAeL,GACfa,EAASb,GACTmB,EAAanB","file":"main.d0968e9a.js","sourceRoot":"..\\src","sourcesContent":["\n'use strict';\n\nconst employees = document.querySelectorAll('li[data-salary]');\nconst list = document.querySelector('ul');\n\nfunction valuesToNumber(workers) {\n  [...workers].map(elem => {\n    elem.dataset.salary = elem.dataset.salary.replace(',', '.').slice(1);\n  });\n}\n\nfunction sortList(workers) {\n  const sorted\n  = [...workers].sort((a, b) => b.dataset.salary - a.dataset.salary);\n\n  list.append(...sorted);\n}\n\nfunction getEmployees(workers) {\n  const obj = [];\n  let data = {};\n\n  [...workers].map((elem) => {\n    const string = elem.dataset.salary.replace('.', ',');\n\n    elem.dataset.salary = `$${string}`;\n  });\n\n  for (const key of [...workers]) {\n    data = {\n      name: key.innerText,\n      position: key.dataset.position,\n      salary: key.dataset.salary,\n      age: key.dataset.age,\n    };\n    obj.push(data);\n  }\n\n  return obj;\n}\n\nvaluesToNumber(employees);\nsortList(employees);\ngetEmployees(employees);\n"]}